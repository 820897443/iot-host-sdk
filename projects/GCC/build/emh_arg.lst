ARM GAS  /tmp/ccRM7esH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"emh_arg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.emh_arg_for_type,"ax",%progbits
  18              		.align	1
  19              		.global	emh_arg_for_type
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	emh_arg_for_type:
  26              	.LFB5:
  27              		.file 1 "src/helper/emhost/emh_arg.c"
   1:src/helper/emhost/emh_arg.c **** /**
   2:src/helper/emhost/emh_arg.c ****  ******************************************************************************
   3:src/helper/emhost/emh_arg.c ****  * @file    emh_arg.c
   4:src/helper/emhost/emh_arg.c ****  * @author  William Xu
   5:src/helper/emhost/emh_arg.c ****  * @version V1.0.0
   6:src/helper/emhost/emh_arg.c ****  * @date    9-Apr-2018
   7:src/helper/emhost/emh_arg.c ****  * @brief   AT command arguments to enum type convert
   8:src/helper/emhost/emh_arg.c ****  ******************************************************************************
   9:src/helper/emhost/emh_arg.c ****  *
  10:src/helper/emhost/emh_arg.c ****  * Copyright (c) 2009-2018 MXCHIP Co.,Ltd.
  11:src/helper/emhost/emh_arg.c ****  *
  12:src/helper/emhost/emh_arg.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  13:src/helper/emhost/emh_arg.c ****  * you may not use this file except in compliance with the License.
  14:src/helper/emhost/emh_arg.c ****  * You may obtain a copy of the License at
  15:src/helper/emhost/emh_arg.c ****  *
  16:src/helper/emhost/emh_arg.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  17:src/helper/emhost/emh_arg.c ****  *
  18:src/helper/emhost/emh_arg.c ****  * Unless required by applicable law or agreed to in writing, software
  19:src/helper/emhost/emh_arg.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  20:src/helper/emhost/emh_arg.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:src/helper/emhost/emh_arg.c ****  * See the License for the specific language governing permissions and
  22:src/helper/emhost/emh_arg.c ****  * limitations under the License.
  23:src/helper/emhost/emh_arg.c ****  *
  24:src/helper/emhost/emh_arg.c ****  ******************************************************************************
  25:src/helper/emhost/emh_arg.c ****  */
  26:src/helper/emhost/emh_arg.c **** 
  27:src/helper/emhost/emh_arg.c **** #include "emh_arg.h"
  28:src/helper/emhost/emh_arg.c **** 
  29:src/helper/emhost/emh_arg.c **** /******************************************************************************
  30:src/helper/emhost/emh_arg.c ****  *                                 Constants
  31:src/helper/emhost/emh_arg.c ****  ******************************************************************************/
ARM GAS  /tmp/ccRM7esH.s 			page 2


  32:src/helper/emhost/emh_arg.c **** 
  33:src/helper/emhost/emh_arg.c **** /******************************************************************************
  34:src/helper/emhost/emh_arg.c ****  *                              Alicoud SDS service
  35:src/helper/emhost/emh_arg.c ****  ******************************************************************************/
  36:src/helper/emhost/emh_arg.c **** 
  37:src/helper/emhost/emh_arg.c **** #ifdef AT_SUPPORT_ALISDS
  38:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ALISDS_FORMAT[] =
  39:src/helper/emhost/emh_arg.c **** {
  40:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_FORMAT_JSON] = "JSON",
  41:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_FORMAT_RAW]  = "RAW",
  42:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_FORMAT_MAX]  = "\0",
  43:src/helper/emhost/emh_arg.c **** };
  44:src/helper/emhost/emh_arg.c **** 
  45:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ALISDS_CONN[] =
  46:src/helper/emhost/emh_arg.c **** {
  47:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_CONN_CONNECTED]     = "CONNECT",
  48:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_CONN_DISCONNECTED]  = "DISCONNECT",
  49:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_CONN_MAX]           = "\0",
  50:src/helper/emhost/emh_arg.c **** };
  51:src/helper/emhost/emh_arg.c **** 
  52:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ALISDS_STATUS[] =
  53:src/helper/emhost/emh_arg.c **** {
  54:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_STATUS_UNINITIALIZED]	= "NONE",
  55:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_STATUS_INITIALIZED]		= "INIT",
  56:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_STATUS_CONNECTED]		= "CONNECT",
  57:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_STATUS_DISCONNECTED]	= "DISCONNECT",
  58:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_STATUS_MAX]				= "\0",
  59:src/helper/emhost/emh_arg.c **** };
  60:src/helper/emhost/emh_arg.c **** 
  61:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ALISDS_EV[] =
  62:src/helper/emhost/emh_arg.c **** {
  63:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_EV_ALINK]     = "ALINK",
  64:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_EV_GET]       = "GET",
  65:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_EV_SET]       = "SET",
  66:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ALISDS_EV_MAX]       = "\0",
  67:src/helper/emhost/emh_arg.c **** };
  68:src/helper/emhost/emh_arg.c **** #endif
  69:src/helper/emhost/emh_arg.c **** 
  70:src/helper/emhost/emh_arg.c **** /******************************************************************************
  71:src/helper/emhost/emh_arg.c ****  *                              WiFi service
  72:src/helper/emhost/emh_arg.c ****  ******************************************************************************/
  73:src/helper/emhost/emh_arg.c **** 
  74:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_WLAN_EV[] =
  75:src/helper/emhost/emh_arg.c **** {
  76:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_EV_UAP_ESTABLISHED]     = "AP_UP",
  77:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_EV_UAP_DESTROYED]       = "AP_DOWN",
  78:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_EV_STA_CONNECTED]       = "STATION_UP",
  79:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_EV_STA_DISCONNECTED]    = "STATION_DOWN",
  80:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_EV_MAX]                 = "\0",
  81:src/helper/emhost/emh_arg.c **** };
  82:src/helper/emhost/emh_arg.c **** 
  83:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_WLAN_STA[] =
  84:src/helper/emhost/emh_arg.c **** {
  85:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_STA_CONNECTED]       = "STATION_UP",
  86:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_STA_DISCONNECTED]    = "STATION_DOWN",
  87:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_STA_DISCONNECTED]    = "CONNECTING",
  88:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_WLAN_STA_MAX]             = "\0",
ARM GAS  /tmp/ccRM7esH.s 			page 3


  89:src/helper/emhost/emh_arg.c **** };
  90:src/helper/emhost/emh_arg.c **** 
  91:src/helper/emhost/emh_arg.c **** /******************************************************************************
  92:src/helper/emhost/emh_arg.c ****  *                              Alicoud ILOP service
  93:src/helper/emhost/emh_arg.c ****  ******************************************************************************/
  94:src/helper/emhost/emh_arg.c **** 
  95:src/helper/emhost/emh_arg.c **** #ifdef AT_SUPPORT_ILOP
  96:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ILOP_DM[] =
  97:src/helper/emhost/emh_arg.c **** {
  98:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_DM_RAW]			= "0",
  99:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_DM_ICA_BY_CLOUD]  = "1",
 100:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_DM_ICA_BY_LOCAL]	= "2",
 101:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_DM_MAX]			= "\0",
 102:src/helper/emhost/emh_arg.c **** };
 103:src/helper/emhost/emh_arg.c **** 
 104:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ILOP_CONFIG[] = 
 105:src/helper/emhost/emh_arg.c **** {
 106:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_CONFIG_NONE]		= "NONE",
 107:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_CONFIG_TLS]		= "CONFIG",
 108:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_CONFIG_MAX]		= "\0",
 109:src/helper/emhost/emh_arg.c **** };
 110:src/helper/emhost/emh_arg.c **** 
 111:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ILOP_STATUS[] =
 112:src/helper/emhost/emh_arg.c **** {
 113:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_STATUS_UNINITIALIZED]		= "NONE",
 114:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_STATUS_INITIALIZED]		= "INIT",
 115:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_STATUS_CONNECTED]			= "CONNECT",
 116:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_STATUS_DISCONNECTED]		= "DISCONNECT",
 117:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_STATUS_MAX]     		  	= "\0",
 118:src/helper/emhost/emh_arg.c **** };
 119:src/helper/emhost/emh_arg.c **** 
 120:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ILOP_CONN[] =
 121:src/helper/emhost/emh_arg.c **** {
 122:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_CONN_CLOUD_CONNECTED]     = "CLOUD_CONNECT",
 123:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_CONN_CLOUD_DISCONNECTED]  = "CLOUD_DISCONNECT",
 124:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_CONN_LOCAL_CONNECTED]     = "LOCAL_CONNECT",
 125:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_CONN_LOCAL_DISCONNECTED]  = "LOCAL_DISCONNECT",
 126:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_CONN_MAX]           		= "\0",
 127:src/helper/emhost/emh_arg.c **** };
 128:src/helper/emhost/emh_arg.c **** 
 129:src/helper/emhost/emh_arg.c **** const char* EMH_ARG_ILOP_EV[] =
 130:src/helper/emhost/emh_arg.c **** {
 131:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_EV_ILOP]			= "ILOP",
 132:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_EV_SETICA]		= "SETICA",
 133:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_EV_SETRAW]        = "SETRAW",
 134:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_EV_MAX]       	= "\0",
 135:src/helper/emhost/emh_arg.c **** };
 136:src/helper/emhost/emh_arg.c **** 
 137:src/helper/emhost/emh_arg.c **** const char *EMH_ARG_ILOP_VT[] =
 138:src/helper/emhost/emh_arg.c **** {
 139:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_VT_PROPERTY] 		= "property",
 140:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_VT_EVENT]			= "event",
 141:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_VT_SERVICE]		= "service",
 142:src/helper/emhost/emh_arg.c **** 	[EMH_ARG_ILOP_VT_MAX]			= "\0",
 143:src/helper/emhost/emh_arg.c **** };
 144:src/helper/emhost/emh_arg.c **** #endif
 145:src/helper/emhost/emh_arg.c **** 
ARM GAS  /tmp/ccRM7esH.s 			page 4


 146:src/helper/emhost/emh_arg.c **** /******************************************************************************
 147:src/helper/emhost/emh_arg.c ****  *                              Function Definitions
 148:src/helper/emhost/emh_arg.c ****  ******************************************************************************/
 149:src/helper/emhost/emh_arg.c **** 
 150:src/helper/emhost/emh_arg.c **** const char* emh_arg_for_type(const char* emh_arg[], uint8_t type)
 151:src/helper/emhost/emh_arg.c **** {
  28              		.loc 1 151 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 152:src/helper/emhost/emh_arg.c **** 	return emh_arg[type];
 153:src/helper/emhost/emh_arg.c **** }
  34              		.loc 1 153 0
  35 0000 50F82100 		ldr	r0, [r0, r1, lsl #2]
  36              	.LVL1:
  37 0004 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE5:
  41              		.section	.text.emh_arg_for_arg,"ax",%progbits
  42              		.align	1
  43              		.global	emh_arg_for_arg
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	emh_arg_for_arg:
  50              	.LFB6:
 154:src/helper/emhost/emh_arg.c **** 
 155:src/helper/emhost/emh_arg.c **** uint8_t emh_arg_for_arg(const  char* emh_arg[], char *arg)
 156:src/helper/emhost/emh_arg.c **** {
  51              		.loc 1 156 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL2:
  56 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 24
  59              		.cfi_offset 3, -24
  60              		.cfi_offset 4, -20
  61              		.cfi_offset 5, -16
  62              		.cfi_offset 6, -12
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 0646     		mov	r6, r0
  66 0004 0F46     		mov	r7, r1
  67              	.LVL3:
  68              	.LBB2:
 157:src/helper/emhost/emh_arg.c **** 	for (uint8_t i = 0; i < EMH_ARG_ERR; i++) {
  69              		.loc 1 157 0
  70 0006 0024     		movs	r4, #0
  71              	.LVL4:
  72              	.L3:
  73              		.loc 1 157 0 is_stmt 0 discriminator 1
  74 0008 FF2C     		cmp	r4, #255
ARM GAS  /tmp/ccRM7esH.s 			page 5


  75 000a 10D0     		beq	.L4
 158:src/helper/emhost/emh_arg.c **** 		if (*emh_arg[i] == 0x0) break;
  76              		.loc 1 158 0 is_stmt 1
  77 000c 56F82450 		ldr	r5, [r6, r4, lsl #2]
  78 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  79 0012 5BB1     		cbz	r3, .L6
 159:src/helper/emhost/emh_arg.c **** 		if (memcmp(emh_arg[i], arg, strlen(emh_arg[i])) == 0) {
  80              		.loc 1 159 0
  81 0014 2846     		mov	r0, r5
  82 0016 FFF7FEFF 		bl	strlen
  83              	.LVL5:
  84 001a 0246     		mov	r2, r0
  85 001c 3946     		mov	r1, r7
  86 001e 2846     		mov	r0, r5
  87 0020 FFF7FEFF 		bl	memcmp
  88              	.LVL6:
  89 0024 18B1     		cbz	r0, .L4
 157:src/helper/emhost/emh_arg.c **** 	for (uint8_t i = 0; i < EMH_ARG_ERR; i++) {
  90              		.loc 1 157 0 discriminator 2
  91 0026 0134     		adds	r4, r4, #1
  92              	.LVL7:
  93 0028 E4B2     		uxtb	r4, r4
  94              	.LVL8:
  95 002a EDE7     		b	.L3
  96              	.L6:
  97              	.LBE2:
 160:src/helper/emhost/emh_arg.c **** 			return i;
 161:src/helper/emhost/emh_arg.c **** 		}
 162:src/helper/emhost/emh_arg.c **** 		
 163:src/helper/emhost/emh_arg.c **** 	}
 164:src/helper/emhost/emh_arg.c **** 	return EMH_ARG_ERR;
  98              		.loc 1 164 0
  99 002c FF24     		movs	r4, #255
 100              	.LVL9:
 101              	.L4:
 165:src/helper/emhost/emh_arg.c **** }
 102              		.loc 1 165 0
 103 002e 2046     		mov	r0, r4
 104 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 105              		.cfi_endproc
 106              	.LFE6:
 108              		.global	EMH_ARG_WLAN_STA
 109              		.global	EMH_ARG_WLAN_EV
 110              		.section	.rodata
 111              		.align	2
 112              	.LC2:
 113 0000 0000     		.ascii	"\000\000"
 114              		.section	.data.EMH_ARG_WLAN_EV,"aw",%progbits
 115              		.align	2
 118              	EMH_ARG_WLAN_EV:
 119 0000 18000000 		.word	.LC3
 120 0004 20000000 		.word	.LC4
 121 0008 00000000 		.word	.LC0
 122 000c 28000000 		.word	.LC5
 123 0010 00000000 		.word	.LC2
 124              		.section	.data.EMH_ARG_WLAN_STA,"aw",%progbits
 125              		.align	2
ARM GAS  /tmp/ccRM7esH.s 			page 6


 128              	EMH_ARG_WLAN_STA:
 129 0000 00000000 		.word	.LC0
 130 0004 0C000000 		.word	.LC1
 131 0008 00000000 		.space	4
 132 000c 00000000 		.word	.LC2
 133              		.section	.rodata.str1.4,"aMS",%progbits,1
 134              		.align	2
 135              	.LC0:
 136 0000 53544154 		.ascii	"STATION_UP\000"
 136      494F4E5F 
 136      555000
 137 000b 00       		.space	1
 138              	.LC1:
 139 000c 434F4E4E 		.ascii	"CONNECTING\000"
 139      45435449 
 139      4E4700
 140 0017 00       		.space	1
 141              	.LC3:
 142 0018 41505F55 		.ascii	"AP_UP\000"
 142      5000
 143 001e 0000     		.space	2
 144              	.LC4:
 145 0020 41505F44 		.ascii	"AP_DOWN\000"
 145      4F574E00 
 146              	.LC5:
 147 0028 53544154 		.ascii	"STATION_DOWN\000"
 147      494F4E5F 
 147      444F574E 
 147      00
 148              		.text
 149              	.Letext0:
 150              		.file 2 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 151              		.file 3 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 152              		.file 4 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 153              		.file 5 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 154              		.file 6 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/lib/gc
 155              		.file 7 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 156              		.file 8 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 157              		.file 9 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 158              		.file 10 "src/helper/emhost/emh_arg.h"
 159              		.file 11 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-n
ARM GAS  /tmp/ccRM7esH.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 emh_arg.c
     /tmp/ccRM7esH.s:18     .text.emh_arg_for_type:0000000000000000 $t
     /tmp/ccRM7esH.s:25     .text.emh_arg_for_type:0000000000000000 emh_arg_for_type
     /tmp/ccRM7esH.s:42     .text.emh_arg_for_arg:0000000000000000 $t
     /tmp/ccRM7esH.s:49     .text.emh_arg_for_arg:0000000000000000 emh_arg_for_arg
     /tmp/ccRM7esH.s:128    .data.EMH_ARG_WLAN_STA:0000000000000000 EMH_ARG_WLAN_STA
     /tmp/ccRM7esH.s:118    .data.EMH_ARG_WLAN_EV:0000000000000000 EMH_ARG_WLAN_EV
     /tmp/ccRM7esH.s:111    .rodata:0000000000000000 $d
     /tmp/ccRM7esH.s:115    .data.EMH_ARG_WLAN_EV:0000000000000000 $d
     /tmp/ccRM7esH.s:125    .data.EMH_ARG_WLAN_STA:0000000000000000 $d
     /tmp/ccRM7esH.s:134    .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
memcmp
