ARM GAS  /tmp/ccntsoA7.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mx_hal_atomic.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.atomic_enter_critical,"ax",%progbits
  18              		.align	1
  19              		.global	atomic_enter_critical
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	atomic_enter_critical:
  26              	.LFB128:
  27              		.file 1 "Platform/STM32F4xx/peripherals/mx_hal_atomic.c"
   1:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** /**
   2:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  ******************************************************************************
   3:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * @file    mx_hal_atomic.c
   4:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * @author  William Xu
   5:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * @version V1.0.0
   6:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * @date    9-Apr-2018
   7:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * @brief   Critical section enter and leave
   8:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  ******************************************************************************
   9:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  *
  10:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * Copyright (c) 2009-2018 MXCHIP Co.,Ltd.
  11:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  *
  12:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  13:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * you may not use this file except in compliance with the License.
  14:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * You may obtain a copy of the License at
  15:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  *
  16:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  17:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  *
  18:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * Unless required by applicable law or agreed to in writing, software
  19:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  20:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * See the License for the specific language governing permissions and
  22:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * limitations under the License.
  23:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  *
  24:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  ******************************************************************************
  25:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  */
  26:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 
  27:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** #include "mx_hal.h"
  28:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** //#include "cmsis_ccs.h"
  29:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 
  30:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** /******************************************************************************
  31:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  *                              Function Definitions
ARM GAS  /tmp/ccntsoA7.s 			page 2


  32:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  ******************************************************************************/
  33:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 
  34:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** /**
  35:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * \brief Disable interrupts, enter critical section
  36:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  */
  37:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** void atomic_enter_critical(hal_atomic_t volatile *atomic)
  38:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.LBB12:
  35              	.LBB13:
  36              		.file 2 "Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h"
   1:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /tmp/ccntsoA7.s 			page 3


  42:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccntsoA7.s 			page 4


  99:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccntsoA7.s 			page 5


 156:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
  37              		.loc 2 203 0
  38              		.syntax unified
  39              	@ 203 "Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h" 1
  40 0000 EFF31083 		MRS r3, primask
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.LBE13:
  45              	.LBE12:
ARM GAS  /tmp/ccntsoA7.s 			page 6


  39:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 	*atomic = __get_PRIMASK();
  46              		.loc 1 39 0
  47 0004 0360     		str	r3, [r0]
  48              	.LBB14:
  49              	.LBB15:
  71:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
  50              		.loc 2 71 0
  51              		.syntax unified
  52              	@ 71 "Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h" 1
  53 0006 72B6     		cpsid i
  54              	@ 0 "" 2
  55              		.thumb
  56              		.syntax unified
  57              	.LBE15:
  58              	.LBE14:
  59              	.LBB16:
  60              	.LBB17:
 204:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccntsoA7.s 			page 7


 244:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccntsoA7.s 			page 8


 301:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccntsoA7.s 			page 9


 358:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  /tmp/ccntsoA7.s 			page 10


 415:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
  61              		.loc 2 440 0
  62              		.syntax unified
  63              	@ 440 "Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h" 1
  64 0008 BFF35F8F 		dmb 0xF
  65              	@ 0 "" 2
  66              		.thumb
  67              		.syntax unified
  68              	.LBE17:
  69              	.LBE16:
  40:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 	__disable_irq();
  41:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 	__DMB();
  42:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** }
  70              		.loc 1 42 0
  71 000c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE128:
  75              		.section	.text.atomic_leave_critical,"ax",%progbits
  76              		.align	1
  77              		.global	atomic_leave_critical
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv4-sp-d16
  83              	atomic_leave_critical:
  84              	.LFB129:
  43:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 
  44:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** /**
  45:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  * \brief Exit atomic section
  46:Platform/STM32F4xx/peripherals/mx_hal_atomic.c ****  */
  47:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** void atomic_leave_critical(hal_atomic_t volatile *atomic)
  48:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** {
ARM GAS  /tmp/ccntsoA7.s 			page 11


  85              		.loc 1 48 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL1:
  91              	.LBB18:
  92              	.LBB19:
  93              		.loc 2 440 0
  94              		.syntax unified
  95              	@ 440 "Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h" 1
  96 0000 BFF35F8F 		dmb 0xF
  97              	@ 0 "" 2
  98              		.thumb
  99              		.syntax unified
 100              	.LBE19:
 101              	.LBE18:
  49:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 	__DMB();
  50:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** 	__set_PRIMASK(*atomic);
 102              		.loc 1 50 0
 103 0004 0368     		ldr	r3, [r0]
 104              	.LVL2:
 105              	.LBB20:
 106              	.LBB21:
 215:Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h **** }
 107              		.loc 2 215 0
 108              		.syntax unified
 109              	@ 215 "Platform/STM32F4xx/drivers/CMSIS/Include/cmsis_gcc.h" 1
 110 0006 83F31088 		MSR primask, r3
 111              	@ 0 "" 2
 112              	.LVL3:
 113              		.thumb
 114              		.syntax unified
 115              	.LBE21:
 116              	.LBE20:
  51:Platform/STM32F4xx/peripherals/mx_hal_atomic.c **** }
 117              		.loc 1 51 0
 118 000a 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE129:
 122              		.text
 123              	.Letext0:
 124              		.file 3 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 125              		.file 4 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 126              		.file 5 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 127              		.file 6 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 128              		.file 7 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/lib/gc
 129              		.file 8 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 130              		.file 9 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 131              		.file 10 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-n
 132              		.file 11 "Platform/STM32F4xx/drivers/CMSIS/Include/core_cm4.h"
 133              		.file 12 "Platform/STM32F4xx/drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 134              		.file 13 "Platform/STM32F4xx/drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 135              		.file 14 "Platform/STM32F4xx/drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 136              		.file 15 "Platform/STM32F4xx/drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 137              		.file 16 "Platform/STM32F4xx/drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 138              		.file 17 "Platform/STM32F4xx/peripherals/mx_hal.h"
ARM GAS  /tmp/ccntsoA7.s 			page 12


ARM GAS  /tmp/ccntsoA7.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mx_hal_atomic.c
     /tmp/ccntsoA7.s:18     .text.atomic_enter_critical:0000000000000000 $t
     /tmp/ccntsoA7.s:25     .text.atomic_enter_critical:0000000000000000 atomic_enter_critical
     /tmp/ccntsoA7.s:76     .text.atomic_leave_critical:0000000000000000 $t
     /tmp/ccntsoA7.s:83     .text.atomic_leave_critical:0000000000000000 atomic_leave_critical

NO UNDEFINED SYMBOLS
