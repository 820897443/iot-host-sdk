ARM GAS  /tmp/ccONoFBe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"at_test.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.application_start,"ax",%progbits
  18              		.align	1
  19              		.weak	application_start
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	application_start:
  26              	.LFB128:
  27              		.file 1 "Example/at_test/at_test.c"
   1:Example/at_test/at_test.c **** /**
   2:Example/at_test/at_test.c ****  ******************************************************************************
   3:Example/at_test/at_test.c ****  * @file    application_main.c
   4:Example/at_test/at_test.c ****  * @author  QQ Ding
   5:Example/at_test/at_test.c ****  * @version V1.0.0
   6:Example/at_test/at_test.c ****  * @date    10-Sept-2018
   7:Example/at_test/at_test.c ****  * @brief   Main function
   8:Example/at_test/at_test.c ****  ******************************************************************************
   9:Example/at_test/at_test.c ****  *
  10:Example/at_test/at_test.c ****  * Copyright (c) 2009-2018 MXCHIP Co.,Ltd.
  11:Example/at_test/at_test.c ****  *
  12:Example/at_test/at_test.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  13:Example/at_test/at_test.c ****  * you may not use this file except in compliance with the License.
  14:Example/at_test/at_test.c ****  * You may obtain a copy of the License at
  15:Example/at_test/at_test.c ****  *
  16:Example/at_test/at_test.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  17:Example/at_test/at_test.c ****  *
  18:Example/at_test/at_test.c ****  * Unless required by applicable law or agreed to in writing, software
  19:Example/at_test/at_test.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  20:Example/at_test/at_test.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Example/at_test/at_test.c ****  * See the License for the specific language governing permissions and
  22:Example/at_test/at_test.c ****  * limitations under the License.
  23:Example/at_test/at_test.c ****  *
  24:Example/at_test/at_test.c ****  ******************************************************************************
  25:Example/at_test/at_test.c ****  */
  26:Example/at_test/at_test.c **** 
  27:Example/at_test/at_test.c **** #include "stm32f4xx_hal.h"
  28:Example/at_test/at_test.c **** #include "mx_common.h"
  29:Example/at_test/at_test.c **** #include "mx_debug.h"
  30:Example/at_test/at_test.c **** #include "emh_api.h"
  31:Example/at_test/at_test.c **** #include "mx_hal.h"
ARM GAS  /tmp/ccONoFBe.s 			page 2


  32:Example/at_test/at_test.c **** 
  33:Example/at_test/at_test.c **** //#define MX_DEBUG
  34:Example/at_test/at_test.c **** #define APP_DEBUG MX_DEBUG_ON
  35:Example/at_test/at_test.c **** #define app_log(M, ...) MX_LOG(APP_DEBUG, "APP", M, ##__VA_ARGS__)
  36:Example/at_test/at_test.c **** 
  37:Example/at_test/at_test.c **** void application_start( void )
  38:Example/at_test/at_test.c **** {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 40
  41              	.LVL0:
  39:Example/at_test/at_test.c ****     mx_status err = kNoErr;
  40:Example/at_test/at_test.c **** 
  41:Example/at_test/at_test.c ****     mx_hal_ms_ticker_init();
  42              		.loc 1 41 0
  43 0004 FFF7FEFF 		bl	mx_hal_ms_ticker_init
  44              	.LVL1:
  42:Example/at_test/at_test.c ****     mx_hal_stdio_init();
  45              		.loc 1 42 0
  46 0008 FFF7FEFF 		bl	mx_hal_stdio_init
  47              	.LVL2:
  43:Example/at_test/at_test.c ****     
  44:Example/at_test/at_test.c ****     mx_hal_uart_send(&stdio_uart, "hello world", strlen("hello world"), 1000 );
  48              		.loc 1 44 0
  49 000c 4FF47A73 		mov	r3, #1000
  50 0010 0B22     		movs	r2, #11
  51 0012 1F49     		ldr	r1, .L6
  52 0014 1F48     		ldr	r0, .L6+4
  53 0016 FFF7FEFF 		bl	mx_hal_uart_send
  54              	.LVL3:
  45:Example/at_test/at_test.c **** 
  46:Example/at_test/at_test.c **** #if 1
  47:Example/at_test/at_test.c ****     int i = 123;
  55              		.loc 1 47 0
  56 001a 06AA     		add	r2, sp, #24
  57 001c 7B23     		movs	r3, #123
  58 001e 42F8043D 		str	r3, [r2, #-4]!
  48:Example/at_test/at_test.c ****     char test_sscanf[10];
  49:Example/at_test/at_test.c ****     sscanf("OK\r\nOK","%*s\r\n%n",&i);
  59              		.loc 1 49 0
  60 0022 1D49     		ldr	r1, .L6+8
  61 0024 1D48     		ldr	r0, .L6+12
  62 0026 FFF7FEFF 		bl	sscanf
  63              	.LVL4:
  50:Example/at_test/at_test.c ****     printf("test 1 sscanf %d\r\n",i);
  64              		.loc 1 50 0
  65 002a 0599     		ldr	r1, [sp, #20]
ARM GAS  /tmp/ccONoFBe.s 			page 3


  66 002c 1C48     		ldr	r0, .L6+16
  67 002e FFF7FEFF 		bl	printf
  68              	.LVL5:
  51:Example/at_test/at_test.c ****     sscanf("OK\r\nXXXXXOK","%*s%s",test_sscanf);
  69              		.loc 1 51 0
  70 0032 02AA     		add	r2, sp, #8
  71 0034 1B49     		ldr	r1, .L6+20
  72 0036 1C48     		ldr	r0, .L6+24
  73 0038 FFF7FEFF 		bl	sscanf
  74              	.LVL6:
  52:Example/at_test/at_test.c ****     printf("test 2 sscanf %s\r\n",test_sscanf);   
  75              		.loc 1 52 0
  76 003c 02A9     		add	r1, sp, #8
  77 003e 1B48     		ldr	r0, .L6+28
  78 0040 FFF7FEFF 		bl	printf
  79              	.LVL7:
  53:Example/at_test/at_test.c **** #endif
  54:Example/at_test/at_test.c ****     
  55:Example/at_test/at_test.c ****     err = emh_init();
  80              		.loc 1 55 0
  81 0044 FFF7FEFF 		bl	emh_init
  82              	.LVL8:
  83 0048 0446     		mov	r4, r0
  84              	.LVL9:
  56:Example/at_test/at_test.c ****     app_log("emh init err = %d",err);
  85              		.loc 1 56 0
  86 004a 0090     		str	r0, [sp]
  87 004c 3823     		movs	r3, #56
  88 004e 184A     		ldr	r2, .L6+32
  89 0050 1849     		ldr	r1, .L6+36
  90 0052 1948     		ldr	r0, .L6+40
  91              	.LVL10:
  92 0054 FFF7FEFF 		bl	printf
  93              	.LVL11:
  57:Example/at_test/at_test.c **** 
  58:Example/at_test/at_test.c ****     if (err == kNoErr) 
  94              		.loc 1 58 0
  95 0058 24B1     		cbz	r4, .L5
  96              	.LVL12:
  97              	.L3:
  59:Example/at_test/at_test.c ****     {
  60:Example/at_test/at_test.c ****       app_log("FW version: %s", emh_module_get_fw_version());
  61:Example/at_test/at_test.c ****       app_log("System tick: %d", (int)emh_module_get_tick());
  62:Example/at_test/at_test.c ****     }
  63:Example/at_test/at_test.c ****     
  64:Example/at_test/at_test.c ****      while (1) {
  65:Example/at_test/at_test.c ****         emh_runloop();
  98              		.loc 1 65 0 discriminator 1
  99 005a FFF7FEFF 		bl	emh_runloop
 100              	.LVL13:
  66:Example/at_test/at_test.c ****         mx_hal_sys_led_toggle();
 101              		.loc 1 66 0 discriminator 1
 102 005e FFF7FEFF 		bl	mx_hal_sys_led_toggle
 103              	.LVL14:
 104 0062 FAE7     		b	.L3
 105              	.LVL15:
 106              	.L5:
ARM GAS  /tmp/ccONoFBe.s 			page 4


  60:Example/at_test/at_test.c ****       app_log("System tick: %d", (int)emh_module_get_tick());
 107              		.loc 1 60 0 discriminator 1
 108 0064 FFF7FEFF 		bl	emh_module_get_fw_version
 109              	.LVL16:
 110 0068 114D     		ldr	r5, .L6+32
 111 006a 124C     		ldr	r4, .L6+36
 112              	.LVL17:
 113 006c 0090     		str	r0, [sp]
 114 006e 3C23     		movs	r3, #60
 115 0070 2A46     		mov	r2, r5
 116 0072 2146     		mov	r1, r4
 117 0074 1148     		ldr	r0, .L6+44
 118 0076 FFF7FEFF 		bl	printf
 119              	.LVL18:
  61:Example/at_test/at_test.c ****     }
 120              		.loc 1 61 0 discriminator 1
 121 007a FFF7FEFF 		bl	emh_module_get_tick
 122              	.LVL19:
 123 007e 0090     		str	r0, [sp]
 124 0080 3D23     		movs	r3, #61
 125 0082 2A46     		mov	r2, r5
 126 0084 2146     		mov	r1, r4
 127 0086 0E48     		ldr	r0, .L6+48
 128 0088 FFF7FEFF 		bl	printf
 129              	.LVL20:
 130 008c E5E7     		b	.L3
 131              	.L7:
 132 008e 00BF     		.align	2
 133              	.L6:
 134 0090 00000000 		.word	.LC0
 135 0094 00000000 		.word	stdio_uart
 136 0098 0C000000 		.word	.LC1
 137 009c 14000000 		.word	.LC2
 138 00a0 1C000000 		.word	.LC3
 139 00a4 30000000 		.word	.LC4
 140 00a8 38000000 		.word	.LC5
 141 00ac 44000000 		.word	.LC6
 142 00b0 10000000 		.word	.LC7+16
 143 00b4 74000000 		.word	.LC8
 144 00b8 78000000 		.word	.LC9
 145 00bc 9C000000 		.word	.LC10
 146 00c0 BC000000 		.word	.LC11
 147              		.cfi_endproc
 148              	.LFE128:
 150              		.section	.rodata.application_start.str1.4,"aMS",%progbits,1
 151              		.align	2
 152              	.LC0:
 153 0000 68656C6C 		.ascii	"hello world\000"
 153      6F20776F 
 153      726C6400 
 154              	.LC1:
 155 000c 252A730D 		.ascii	"%*s\015\012%n\000"
 155      0A256E00 
 156              	.LC2:
 157 0014 4F4B0D0A 		.ascii	"OK\015\012OK\000"
 157      4F4B00
 158 001b 00       		.space	1
ARM GAS  /tmp/ccONoFBe.s 			page 5


 159              	.LC3:
 160 001c 74657374 		.ascii	"test 1 sscanf %d\015\012\000"
 160      20312073 
 160      7363616E 
 160      66202564 
 160      0D0A00
 161 002f 00       		.space	1
 162              	.LC4:
 163 0030 252A7325 		.ascii	"%*s%s\000"
 163      7300
 164 0036 0000     		.space	2
 165              	.LC5:
 166 0038 4F4B0D0A 		.ascii	"OK\015\012XXXXXOK\000"
 166      58585858 
 166      584F4B00 
 167              	.LC6:
 168 0044 74657374 		.ascii	"test 2 sscanf %s\015\012\000"
 168      20322073 
 168      7363616E 
 168      66202573 
 168      0D0A00
 169 0057 00       		.space	1
 170              	.LC7:
 171 0058 4578616D 		.ascii	"Example/at_test/at_test.c\000"
 171      706C652F 
 171      61745F74 
 171      6573742F 
 171      61745F74 
 172 0072 0000     		.space	2
 173              	.LC8:
 174 0074 41505000 		.ascii	"APP\000"
 175              	.LC9:
 176 0078 5B25733A 		.ascii	"[%s: %s:%4d] emh init err = %d\015\012\000"
 176      2025733A 
 176      2534645D 
 176      20656D68 
 176      20696E69 
 177 0099 000000   		.space	3
 178              	.LC10:
 179 009c 5B25733A 		.ascii	"[%s: %s:%4d] FW version: %s\015\012\000"
 179      2025733A 
 179      2534645D 
 179      20465720 
 179      76657273 
 180 00ba 0000     		.space	2
 181              	.LC11:
 182 00bc 5B25733A 		.ascii	"[%s: %s:%4d] System tick: %d\015\012\000"
 182      2025733A 
 182      2534645D 
 182      20537973 
 182      74656D20 
 183              		.text
 184              	.Letext0:
 185              		.file 2 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 186              		.file 3 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 187              		.file 4 "Platform/STM32F4xx/drivers/CMSIS/Include/core_cm4.h"
 188              		.file 5 "Platform/STM32F4xx/drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  /tmp/ccONoFBe.s 			page 6


 189              		.file 6 "Platform/STM32F4xx/drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 190              		.file 7 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 191              		.file 8 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 192              		.file 9 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/lib/gc
 193              		.file 10 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-n
 194              		.file 11 "Platform/STM32F4xx/drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 195              		.file 12 "Platform/STM32F4xx/drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 196              		.file 13 "Platform/STM32F4xx/drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 197              		.file 14 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-n
 198              		.file 15 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-n
 199              		.file 16 "src/helper/mx_common.h"
 200              		.file 17 "src/helper/emhost/emh_arg.h"
 201              		.file 18 "Platform/STM32F4xx/peripherals/mx_hal.h"
 202              		.file 19 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-n
 203              		.file 20 "src/helper/emhost/emh_api.h"
ARM GAS  /tmp/ccONoFBe.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 at_test.c
     /tmp/ccONoFBe.s:18     .text.application_start:0000000000000000 $t
     /tmp/ccONoFBe.s:25     .text.application_start:0000000000000000 application_start
     /tmp/ccONoFBe.s:134    .text.application_start:0000000000000090 $d
     /tmp/ccONoFBe.s:151    .rodata.application_start.str1.4:0000000000000000 $d
     /tmp/ccONoFBe.s:170    .rodata.application_start.str1.4:0000000000000058 .LC7

UNDEFINED SYMBOLS
mx_hal_ms_ticker_init
mx_hal_stdio_init
mx_hal_uart_send
sscanf
printf
emh_init
emh_runloop
mx_hal_sys_led_toggle
emh_module_get_fw_version
emh_module_get_tick
stdio_uart
