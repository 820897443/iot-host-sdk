ARM GAS  /tmp/ccV0tMEf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB126:
  27              		.file 1 "Platform/STM32F4xx/stm32f4xx_it.c"
   1:Platform/STM32F4xx/stm32f4xx_it.c **** /**
   2:Platform/STM32F4xx/stm32f4xx_it.c ****   ******************************************************************************
   3:Platform/STM32F4xx/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Platform/STM32F4xx/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Platform/STM32F4xx/stm32f4xx_it.c ****   ******************************************************************************
   6:Platform/STM32F4xx/stm32f4xx_it.c ****   *
   7:Platform/STM32F4xx/stm32f4xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Platform/STM32F4xx/stm32f4xx_it.c ****   *
   9:Platform/STM32F4xx/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Platform/STM32F4xx/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Platform/STM32F4xx/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Platform/STM32F4xx/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Platform/STM32F4xx/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Platform/STM32F4xx/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Platform/STM32F4xx/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Platform/STM32F4xx/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Platform/STM32F4xx/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Platform/STM32F4xx/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Platform/STM32F4xx/stm32f4xx_it.c ****   *
  20:Platform/STM32F4xx/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Platform/STM32F4xx/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Platform/STM32F4xx/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Platform/STM32F4xx/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Platform/STM32F4xx/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Platform/STM32F4xx/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Platform/STM32F4xx/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Platform/STM32F4xx/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Platform/STM32F4xx/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Platform/STM32F4xx/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Platform/STM32F4xx/stm32f4xx_it.c ****   *
  31:Platform/STM32F4xx/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccV0tMEf.s 			page 2


  32:Platform/STM32F4xx/stm32f4xx_it.c ****   */
  33:Platform/STM32F4xx/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Platform/STM32F4xx/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Platform/STM32F4xx/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Platform/STM32F4xx/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Platform/STM32F4xx/stm32f4xx_it.c **** 
  38:Platform/STM32F4xx/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Platform/STM32F4xx/stm32f4xx_it.c **** /* USER CODE END 0 */
  40:Platform/STM32F4xx/stm32f4xx_it.c **** 
  41:Platform/STM32F4xx/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  42:Platform/STM32F4xx/stm32f4xx_it.c **** 
  43:Platform/STM32F4xx/stm32f4xx_it.c **** /******************************************************************************/
  44:Platform/STM32F4xx/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  45:Platform/STM32F4xx/stm32f4xx_it.c **** /******************************************************************************/
  46:Platform/STM32F4xx/stm32f4xx_it.c **** 
  47:Platform/STM32F4xx/stm32f4xx_it.c **** /**
  48:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  49:Platform/STM32F4xx/stm32f4xx_it.c **** */
  50:Platform/STM32F4xx/stm32f4xx_it.c **** void NMI_Handler(void)
  51:Platform/STM32F4xx/stm32f4xx_it.c **** {
  28              		.loc 1 51 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  52:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  53:Platform/STM32F4xx/stm32f4xx_it.c **** 
  54:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  55:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  56:Platform/STM32F4xx/stm32f4xx_it.c **** 
  57:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  58:Platform/STM32F4xx/stm32f4xx_it.c **** }
  33              		.loc 1 58 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE126:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB127:
  59:Platform/STM32F4xx/stm32f4xx_it.c **** 
  60:Platform/STM32F4xx/stm32f4xx_it.c **** /**
  61:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  62:Platform/STM32F4xx/stm32f4xx_it.c **** */
  63:Platform/STM32F4xx/stm32f4xx_it.c **** void HardFault_Handler(void)
  64:Platform/STM32F4xx/stm32f4xx_it.c **** {
  48              		.loc 1 64 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
ARM GAS  /tmp/ccV0tMEf.s 			page 3


  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE127:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	MemManage_Handler:
  68              	.LFB128:
  65:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  66:Platform/STM32F4xx/stm32f4xx_it.c **** 
  67:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  68:Platform/STM32F4xx/stm32f4xx_it.c ****   while (1)
  69:Platform/STM32F4xx/stm32f4xx_it.c ****   {
  70:Platform/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  71:Platform/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  72:Platform/STM32F4xx/stm32f4xx_it.c ****   }
  73:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  74:Platform/STM32F4xx/stm32f4xx_it.c **** 
  75:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  76:Platform/STM32F4xx/stm32f4xx_it.c **** }
  77:Platform/STM32F4xx/stm32f4xx_it.c **** 
  78:Platform/STM32F4xx/stm32f4xx_it.c **** /**
  79:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  80:Platform/STM32F4xx/stm32f4xx_it.c **** */
  81:Platform/STM32F4xx/stm32f4xx_it.c **** void MemManage_Handler(void)
  82:Platform/STM32F4xx/stm32f4xx_it.c **** {
  69              		.loc 1 82 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE128:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	BusFault_Handler:
  89              	.LFB129:
  83:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  84:Platform/STM32F4xx/stm32f4xx_it.c **** 
  85:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  86:Platform/STM32F4xx/stm32f4xx_it.c ****   while (1)
  87:Platform/STM32F4xx/stm32f4xx_it.c ****   {
  88:Platform/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  89:Platform/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
ARM GAS  /tmp/ccV0tMEf.s 			page 4


  90:Platform/STM32F4xx/stm32f4xx_it.c ****   }
  91:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  92:Platform/STM32F4xx/stm32f4xx_it.c **** 
  93:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  94:Platform/STM32F4xx/stm32f4xx_it.c **** }
  95:Platform/STM32F4xx/stm32f4xx_it.c **** 
  96:Platform/STM32F4xx/stm32f4xx_it.c **** /**
  97:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  98:Platform/STM32F4xx/stm32f4xx_it.c **** */
  99:Platform/STM32F4xx/stm32f4xx_it.c **** void BusFault_Handler(void)
 100:Platform/STM32F4xx/stm32f4xx_it.c **** {
  90              		.loc 1 100 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE129:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	UsageFault_Handler:
 110              	.LFB130:
 101:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 102:Platform/STM32F4xx/stm32f4xx_it.c **** 
 103:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 104:Platform/STM32F4xx/stm32f4xx_it.c ****   while (1)
 105:Platform/STM32F4xx/stm32f4xx_it.c ****   {
 106:Platform/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 107:Platform/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 108:Platform/STM32F4xx/stm32f4xx_it.c ****   }
 109:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 110:Platform/STM32F4xx/stm32f4xx_it.c **** 
 111:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 112:Platform/STM32F4xx/stm32f4xx_it.c **** }
 113:Platform/STM32F4xx/stm32f4xx_it.c **** 
 114:Platform/STM32F4xx/stm32f4xx_it.c **** /**
 115:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 116:Platform/STM32F4xx/stm32f4xx_it.c **** */
 117:Platform/STM32F4xx/stm32f4xx_it.c **** void UsageFault_Handler(void)
 118:Platform/STM32F4xx/stm32f4xx_it.c **** {
 111              		.loc 1 118 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
ARM GAS  /tmp/ccV0tMEf.s 			page 5


 120              	.LFE130:
 122              		.section	.text.SVC_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	SVC_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	SVC_Handler:
 131              	.LFB131:
 119:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 120:Platform/STM32F4xx/stm32f4xx_it.c **** 
 121:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 122:Platform/STM32F4xx/stm32f4xx_it.c ****   while (1)
 123:Platform/STM32F4xx/stm32f4xx_it.c ****   {
 124:Platform/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 125:Platform/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 126:Platform/STM32F4xx/stm32f4xx_it.c ****   }
 127:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 128:Platform/STM32F4xx/stm32f4xx_it.c **** 
 129:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 130:Platform/STM32F4xx/stm32f4xx_it.c **** }
 131:Platform/STM32F4xx/stm32f4xx_it.c **** 
 132:Platform/STM32F4xx/stm32f4xx_it.c **** /**
 133:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 134:Platform/STM32F4xx/stm32f4xx_it.c **** */
 135:Platform/STM32F4xx/stm32f4xx_it.c **** void SVC_Handler(void)
 136:Platform/STM32F4xx/stm32f4xx_it.c **** {
 132              		.loc 1 136 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 138:Platform/STM32F4xx/stm32f4xx_it.c **** 
 139:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 140:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 141:Platform/STM32F4xx/stm32f4xx_it.c **** 
 142:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 143:Platform/STM32F4xx/stm32f4xx_it.c **** }
 137              		.loc 1 143 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE131:
 142              		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	DebugMon_Handler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	DebugMon_Handler:
 151              	.LFB132:
 144:Platform/STM32F4xx/stm32f4xx_it.c **** 
 145:Platform/STM32F4xx/stm32f4xx_it.c **** /**
 146:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 147:Platform/STM32F4xx/stm32f4xx_it.c **** */
ARM GAS  /tmp/ccV0tMEf.s 			page 6


 148:Platform/STM32F4xx/stm32f4xx_it.c **** void DebugMon_Handler(void)
 149:Platform/STM32F4xx/stm32f4xx_it.c **** {
 152              		.loc 1 149 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 150:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Platform/STM32F4xx/stm32f4xx_it.c **** 
 152:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Platform/STM32F4xx/stm32f4xx_it.c **** 
 155:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Platform/STM32F4xx/stm32f4xx_it.c **** }
 157              		.loc 1 156 0
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE132:
 162              		.section	.text.PendSV_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	PendSV_Handler:
 171              	.LFB133:
 157:Platform/STM32F4xx/stm32f4xx_it.c **** 
 158:Platform/STM32F4xx/stm32f4xx_it.c **** /**
 159:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 160:Platform/STM32F4xx/stm32f4xx_it.c **** */
 161:Platform/STM32F4xx/stm32f4xx_it.c **** void PendSV_Handler(void)
 162:Platform/STM32F4xx/stm32f4xx_it.c **** {
 172              		.loc 1 162 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 163:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 164:Platform/STM32F4xx/stm32f4xx_it.c **** 
 165:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 166:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 167:Platform/STM32F4xx/stm32f4xx_it.c **** 
 168:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 169:Platform/STM32F4xx/stm32f4xx_it.c **** }
 177              		.loc 1 169 0
 178 0000 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE133:
 182              		.section	.text.SysTick_Handler,"ax",%progbits
 183              		.align	1
 184              		.global	SysTick_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	SysTick_Handler:
ARM GAS  /tmp/ccV0tMEf.s 			page 7


 191              	.LFB134:
 170:Platform/STM32F4xx/stm32f4xx_it.c **** 
 171:Platform/STM32F4xx/stm32f4xx_it.c **** /**
 172:Platform/STM32F4xx/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 173:Platform/STM32F4xx/stm32f4xx_it.c **** */
 174:Platform/STM32F4xx/stm32f4xx_it.c **** void SysTick_Handler(void)
 175:Platform/STM32F4xx/stm32f4xx_it.c **** {
 192              		.loc 1 175 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI0:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 176:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 177:Platform/STM32F4xx/stm32f4xx_it.c **** 
 178:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 179:Platform/STM32F4xx/stm32f4xx_it.c ****   HAL_IncTick();
 201              		.loc 1 179 0
 202 0002 FFF7FEFF 		bl	HAL_IncTick
 203              	.LVL0:
 180:Platform/STM32F4xx/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 204              		.loc 1 180 0
 205 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 206              	.LVL1:
 181:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 182:Platform/STM32F4xx/stm32f4xx_it.c **** 
 183:Platform/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 184:Platform/STM32F4xx/stm32f4xx_it.c **** }
 207              		.loc 1 184 0
 208 000a 08BD     		pop	{r3, pc}
 209              		.cfi_endproc
 210              	.LFE134:
 212              		.text
 213              	.Letext0:
 214              		.file 2 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 215              		.file 3 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 216              		.file 4 "Platform/STM32F4xx/drivers/CMSIS/Include/core_cm4.h"
 217              		.file 5 "Platform/STM32F4xx/drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 218              		.file 6 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 219              		.file 7 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 220              		.file 8 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/lib/gc
 221              		.file 9 "/home/wumingju/Documents/aos/AliOS-Things/build/compiler/gcc-arm-none-eabi/Linux64/arm-no
 222              		.file 10 "Platform/STM32F4xx/drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 223              		.file 11 "Platform/STM32F4xx/drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccV0tMEf.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccV0tMEf.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccV0tMEf.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccV0tMEf.s:60     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:67     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccV0tMEf.s:81     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:88     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccV0tMEf.s:102    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:109    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccV0tMEf.s:123    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:130    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccV0tMEf.s:143    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:150    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccV0tMEf.s:163    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:170    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccV0tMEf.s:183    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccV0tMEf.s:190    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
